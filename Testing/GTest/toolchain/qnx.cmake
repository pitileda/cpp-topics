SET(CMAKE_SYSTEM_NAME QNX)

if(QNX_HOST)
    set(ENV{QNX_HOST} "${QNX_HOST}")
else()
    set(QNX_HOST "$ENV{QNX_HOST}")
    if("${QNX_HOST}" STREQUAL "")
        message(FATAL_ERROR "QNX_HOST environment variable is not defined")
    endif()
    set(QNX_HOST "${QNX_HOST}" CACHE INTERNAL "")
endif()
message(STATUS "Using QNX_HOST ${QNX_HOST}")

if(QNX_TARGET)
    set(ENV{QNX_TARGET} "${QNX_TARGET}")
else()
    set(QNX_TARGET "$ENV{QNX_TARGET}")
    if("${QNX_TARGET}" STREQUAL "")
        message(FATAL_ERROR "QNX_TARGET environment variable is not defined")
    endif()
    set(QNX_TARGET "${QNX_TARGET}" CACHE INTERNAL "")
endif()
message(STATUS "Using QNX_TARGET ${QNX_TARGET}")


SET(CMAKE_C_COMPILER   "${QNX_HOST}/usr/bin/ntoaarch64-gcc")
SET(CMAKE_CXX_COMPILER "${QNX_HOST}/usr/bin/ntoaarch64-g++")
SET(CMAKE_AR "${QNX_HOST}/usr/bin/ntoaarch64-ar" CACHE PATH "QNX AR Program" )
SET(CMAKE_FIND_ROOT_PATH  "${QNX_TARGET}" "${QNX_TARGET}/usr" "${QNX_TARGET}/usr/include" "${QNX_TARGET}/aarch64le/lib/")

SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)